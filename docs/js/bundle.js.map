{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/fetch.js","webpack:///./src/js/showWheater.js","webpack:///./src/js/showCurrentWeather.js","webpack:///./src/js/geolocation.js","webpack:///./src/js/askForData.js","webpack:///./src/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getData","url","callback","fetch","then","res","json","showWeather","arg","console","log","city","list","showCurrentWeather","apiKey","askForData","inputType","userPosition","window","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","showWheater","error"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//funkcja odpowiada za pobranie danych następnie uruchamia callback\nconst getData =(url,callback)=>{\nlet data=fetch(url)\n.then(res=>res.json())\n//.then(res=>console.log(res))\n.then((res)=>{callback(res)})\n}\n\nexport default getData\n","//calback do fetcha - tutaj trzeba będzie powstawiać elementy domu\nfunction showWeather(arg){\n    console.log(\"-----Pogoda na najbliższe dni------\") \n    console.log(arg) //całe dane już przerobione z json \n    console.log(arg.city) // miasto jakie wyszukało\n    console.log(arg.list) // lista \"pogód\" na najbliższy czas\n    console.log(\"-----------\") \n    }\n\nexport default showWeather\n","function showCurrentWeather(arg){\n    console.log(\"-----Aktualna Pogoda------\") \n    console.log(arg) //całe dane już przerobione z json \n    \n    console.log(\"-----------\") \n    }\n\nexport default showCurrentWeather\n","//import funkcji z fatchem\nimport getData from \"./fetch.js\"\n//funkcja pomocnicza działająca jako callback dla fetcha - nie wiem jakie elementy mam łapać w query selector i na nich operować\nimport showWheater from \"./showWheater\"\nimport showCurrentWeather from \"./showCurrentWeather\"\n\nconst apiKey=`4e687fa0129ef13f04e5dac8867f62ca`\nconst geolocation = () => {\n    let userPosition={};\n const getUserPostion=window.navigator.geolocation.getCurrentPosition(\n       (position) => {\n            userPosition={\n                latitude:position.coords.latitude,\n                longitude:position.coords.longitude,\n            }\n         \n                \n            console.log(\"--Geolocation - fetch from user\")\n            getData(`http://api.openweathermap.org/data/2.5/forecast?lat=${userPosition.latitude}&lon=${userPosition.longitude}&appid=${apiKey}`,showWheater)\n            getData(`http:api.openweathermap.org/data/2.5/weather?lat=${userPosition.latitude}&lon=${userPosition.longitude}&appid=${apiKey}`,showCurrentWeather)\n            console.log(\"--------\")\n        },\n        (error) => console.log(error, \"Please allow to share your location\")\n)\n}\nexport default geolocation\n","import getData from \"./fetch.js\"\nimport showWeather from \"./showWheater\"\nimport showCurrentWeather from \"./showCurrentWeather\"\n\nconst apiKey=`4e687fa0129ef13f04e5dac8867f62ca`\nconst askForData = (inputType=\"Circle\",inputValue=\"\") => {\n    //za input Type wstawiamy z czego pobieramy input Value to value inputa\n    //możba sobie potestować wstawiając za input Type City, ZipCode, Geo\n    switch (inputType) {\n        case 'City':\n            //pobiera pod względem miasta\n                getData(`http://api.openweathermap.org/data/2.5/forecast?q=London&appid=${apiKey}`,showWeather)\n                getData(`http:/api.openweathermap.org/data/2.5/weather?q=London&appid=${apiKey}`,showCurrentWeather);\n\n          break;\n        case 'ZipCode':\n            //pobiera po kodzie\n               getData(`http://api.openweathermap.org/data/2.5/forecast?zip=61-222,pl&appid=${apiKey}`,showWeather)\n                getData(`http://api.openweathermap.org/data/2.5/weather?zip=61-222,pl&appid=${apiKey}`,showCurrentWeather)\n              \n\n                break;\n          case 'Geo':\n              //pobiera po współrzędnych\n                getData(`http://api.openweathermap.org/data/2.5/forecast?lat=35&lon=139&appid=${apiKey}`,showWeather)\n                getData(`http:api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=${apiKey}`,showCurrentWeather)\n          break;\n            case 'Rectangle':\n              //pobiera po obszarze miast (kwadrat koordynaty geograficzne)\n                getData(`http://api.openweathermap.org/data/2.5/box/city?bbox=12,32,15,37,10&appid=${apiKey}`,showCurrentWeather)\n          break;\n          case 'Circle':\n              //pobiera po obszarze miast (okrąg- koordynaty geograficzne)\n                getData(`http://api.openweathermap.org/data/2.5/find?lat=55.5&lon=37.5&cnt=10&appid=${apiKey}`,showCurrentWeather)\n          break;\n        default:\n          console.log('test - something go wrong rly rly wrong ');\n      }\n         \n            \n        }\n\nexport default askForData\n","import geolocation from \"./geolocation.js\"\nimport askForData from \"./askForData\"\n\n\n\ngeolocation() //pobiera dane z lokalizaci użytkownika - proponuje żeby od razu po załadowaniu domu uruchamiała się i wskakiwały ako pierwsze - użytkwonik ma domyślnie pogode dla swoej lokalizacji\n\n\n\n//document.querySelector(\"jakiś super formularz\").addEventListener(\"click\",askForData())\n\naskForData() //- funkcja działa docelowo można sobie sprawdzić ZipCode City i GeoLocation\n"],"sourceRoot":""}